// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders/{id}": {
            "get": {
                "description": "Регистрирует нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Order UUID",
                        "name": "order_uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_orders_api_internal_models.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_orders_api_api_errs.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_orders_api_api_errs.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_orders_api_api_errs.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_orders_api_api_errs.ErrorResponse": {
            "description": "Модель описывает возвращаемую ошибку: код и краткое сообщение",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "github_com_orders_api_internal_models.Delivery": {
            "description": "Модель описывает информацию о доставщике",
            "type": "object",
            "required": [
                "city",
                "name",
                "phone"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                }
            }
        },
        "github_com_orders_api_internal_models.Item": {
            "description": "Модель описывает информацию о товаре в заказе",
            "type": "object",
            "required": [
                "chrt_id",
                "name",
                "rid",
                "track_number"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "chrt_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nm_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "rid": {
                    "type": "string"
                },
                "sale": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "integer",
                    "minimum": 0
                },
                "track_number": {
                    "type": "string"
                }
            }
        },
        "github_com_orders_api_internal_models.Order": {
            "type": "object",
            "required": [
                "customer_id",
                "date_created",
                "delivery",
                "delivery_service",
                "entry",
                "items",
                "locale",
                "order_uid",
                "payment",
                "shardkey",
                "track_number"
            ],
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "date_created": {
                    "type": "string"
                },
                "delivery": {
                    "$ref": "#/definitions/github_com_orders_api_internal_models.Delivery"
                },
                "delivery_service": {
                    "type": "string"
                },
                "entry": {
                    "type": "string"
                },
                "internal_signature": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_orders_api_internal_models.Item"
                    }
                },
                "locale": {
                    "type": "string"
                },
                "oof_shard": {
                    "type": "string"
                },
                "order_uid": {
                    "type": "string"
                },
                "payment": {
                    "$ref": "#/definitions/github_com_orders_api_internal_models.Payment"
                },
                "shardkey": {
                    "type": "string"
                },
                "sm_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "track_number": {
                    "type": "string"
                }
            }
        },
        "github_com_orders_api_internal_models.Payment": {
            "description": "Модель описывает информацию о платеже",
            "type": "object",
            "required": [
                "bank",
                "currency",
                "provider",
                "transaction"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 0
                },
                "bank": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "custom_fee": {
                    "type": "integer",
                    "minimum": 0
                },
                "delivery_cost": {
                    "type": "integer",
                    "minimum": 0
                },
                "goods_total": {
                    "type": "integer",
                    "minimum": 0
                },
                "payment_dt": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "transaction": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "WB_order API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
